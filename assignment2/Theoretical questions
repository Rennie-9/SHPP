  1. На каком этапе подключаются библиотеки и почему? Что такое библиотека? Что такое фреймворк? Что такое модуль? и что такое .jar-файл?

Библиотеки обычно подключаются на этапе компиляции или сборки программы, чтобы обеспечить доступ к дополнительному коду, который расширяет функциональность или 
предоставляет специфические возможности, не требуя их повторного написания.
Библиотека — это набор предварительно скомпилированных функций или классов, которые разработчик может использовать для выполнения определенных задач, 
не пишущих код с нуля.
Фреймворк — это более обширный набор инструментов и библиотек, который предоставляет общую структуру для разработки программного обеспечения. 
Он определяет архитектуру приложения и управляет его жизненным циклом.
Модуль — это отдельный файл или набор файлов, содержащий код, который можно повторно использовать в различных частях программы.
Файл с расширением .jar (Java ARchive) — это архивный файл, используемый для распространения набора Java-классов. Он содержит классы и метаданные, 
которые используются Java-приложениями и апплетами.
Эти компоненты являются ключевыми элементами в разработке программного обеспечения, поскольку они позволяют разработчикам строить сложные системы, 
используя уже существующие, проверенные решения.

  2. Почему Джава компилируется в байткод, можно ли байткод вернуть в java?

Java компилируется в байткод, потому что это обеспечивает платформенную независимость. Код Java, написанный один раз, может быть запущен на любой платформе, 
где установлена Java Virtual Machine (JVM). 
JVM интерпретирует байткод для выполнения на конкретной операционной системе и аппаратной платформе.
Возврат байткода в исходный код Java возможен с помощью процесса, называемого декомпиляцией. Декомпиляторы, такие как JD-GUI или JAD, 
могут преобразовать байткод обратно в исходный код Java. 
Однако результат не всегда идеален, и декомпилированный код может не быть точной копией исходного кода, особенно если он был оптимизирован или обфусцирован.

  3. Что нужно для выполнения джава-программы? 

Для выполнения Java-программы необходимо несколько компонентов:

1. Java Development Kit (JDK): Это основной комплект инструментов для разработки Java-приложений, включающий компилятор и библиотеки.
2. Java Runtime Environment (JRE): Это среда выполнения, которая предоставляет библиотеки, Java Virtual Machine (JVM), 
и другие компоненты для запуска приложений, написанных на Java.
3. Java Virtual Machine (JVM): Это виртуальная машина, которая исполняет байткод и обеспечивает платформенную независимость программы.
4. Байткод: Компилированный код Java-программы, который JVM может интерпретировать и выполнять.

Кроме того, для запуска Java-программы может потребоваться наличие определённых библиотек и зависимостей, которые используются в программе. 
Если программа распространяется в виде .jar-файла, то все необходимые классы и ресурсы уже упакованы в этот архив.

  4. Чем отличается JVM от JRE и JDK, может ли JVM работать без JRE?

JVM (Java Virtual Machine), JRE (Java Runtime Environment) и JDK (Java Development Kit) - это три основных компонента, 
связанных с использованием языка программирования Java.

JVM (Java Virtual Machine): JVM - это виртуальная машина, которая обеспечивает выполнение Java-кода на различных платформах. 
Она предоставляет абстрактную платформу для выполнения байт-кода Java и обеспечивает переносимость программ. 
JVM осуществляет управление памятью, оптимизацию производительности и другие функции, необходимые для выполнения Java-программ.

JRE (Java Runtime Environment): JRE - это набор инструментов и библиотек, необходимых для выполнения Java-программ. 
JRE включает в себя JVM, а также все необходимые библиотеки для работы Java-приложений. 
JRE предназначен для работы готовых Java-приложений, а не для их разработки.

JDK (Java Development Kit): JDK - это набор инструментов и библиотек, необходимых для разработки Java-приложений. 
JDK включает в себя JRE, а также компилятор Java (javac), инструмент для работы с командной строкой (java), 
инструмент для упаковки и распаковки JAR-файлов (jar), документацию и другие инструменты для разработки Java-приложений.

JVM не может работать без JRE, поскольку JVM является частью JRE и не может функционировать самостоятельно. 
JVM нуждается в библиотеках и других компонентах, предоставляемых JRE, для выполнения Java-программ.

  5. 
